                               Angularjs入门学习
一、angularjs的四大特征
    mvc 、 数据双向绑定、依赖注入、模块化设计
    练习：表达式
        双向绑定
        控制器   mvc模式   模块化设计   初始化指令  事件指令  循环指令  循环对象数组  内置服务
二.分页数据的实现
    前端页面: 两个参数:   当前页,pageNum
                        每页显示条数:pageSize
    响应参数:当前页的数据展示的结果rows
    满足查询记录的总记录数:total
    添加实现：
        后台：接受brand
        前台：显示reloadList
    修改页面的实现:
        分两步实现:
            后台:修改的实现,通过传递brand
                根据id 查找实体,回显
            前台通过:通过方法判断是否有id,有id就是修改
    删除的实现:
         前台:通过一个数组,把选中的添加到数组中,发送到后台
         后台:通过循环删除
    分页实现: 后台:传过来一个三个参数 tbBrand   pageNum   pageSize
                                day03pinyougou
一、前端代码的高度抽取
    分层开发
        1.抽取公共的service层
        2.抽取公共的controller层
        3.基于base的基本抽取
二.mybatis逆向工程生成
三.规格的表的设计和完成
    1.列表的展示+分页
        分析:后台   传过来来三个参数   specification   pageNum   pageSize
                    分页然后信息返回pageResult
             前台:   负传递三个参数,然后循环展示
    2.规格的添加的实现
        后台:关联数组,我们创建一个组合实体类,用户保存我们的两个对象
        前台:通过添加添加点击事件  获得保存
        注意,我们分装的组合实体类一定要声明  //初始化entity对象
                                $scope.entity={specificationOptions:[]}
        删除选项格子时,我们通过一个内置对象获取当前index
        ng-click="deleRow($index)"
        注意:在添加时,我们先要获取tb_specification表的添加的id,然后返回id,我们通过设置tb_specificationOptions
        的specificationOption.setSpecId(spe.getId());*******特别注意
    3.修改的实现
        两个功能: 1. 页面的回显问题  2.是修改的时候,我们需要把原来的删除后在,在添加我们前台提交过来的数据
    4.删除
        循环ids删除
        注意点:   改变复选框的选中状态   ng-click="updateSelection($event,pojo.id)"
                                   day04模板设计
一.代码生成器
    文件IO操作
    	dom4j
    	模板技术 	插值替换
    	反射

    	页面静态化功能（freemarker模板技术）

    	注意；代码生成器，生成的代码拷贝到项目中时，不要替换品牌和规格模块。
二.模板管理
    分析:模板的作用:在商品录入时,能够基于模板,关联特定的品牌数据和规格数据,以及一些扩展数据
    品牌和模板    多对多
    模板和规格    多对多
    维护模板表的思路:    1.添加两个中间分别维护    2.通过在一张表中,品牌和规格都是基于json数据存储的,以此来维护
    模板表
    1.修改页面,展示模板表中的所有数据
        后台:已经通过模板生成了
        前台:通过修改type_template.html中,映入资源,然后修改循环的值ng-repate="pojo in list"实现循环
    2.select2的使用
        步骤:1.下载好资源   2.参看demo效果  3.直接映入到项目中,将功能实现
    3.selecdt2在项目中静态显示
        注意一个非常重要的问题:映入angularjs-select2的时候我们一定要在base_pagination下面,否则报错
    4.在项目中使用,注意引人时候,初始化方法,调用selectSpecList,selectBrandList两个方法
    注意:每个都有controller方法和service方法,一定认真看
    编写扩展属性:
        编写添加行
        删除行
    5.修改功能的实现
        添加点击事件
        注意:返回的字符串,我们要转化为json对象显示
            两种方法:  eval()     JSON.parse()这个非常重要
            //查询实体
            	$scope.findOne=function(id){
            		typeTemplateService.findOne(id).success(
            			function(response){
            				$scope.entity= response;
            				//解析字符串为json对象
                            //品牌属性的转换
                            $scope.entity.brandIds=JSON.parse(response.brandIds);
                            //规格属性的转换
                            $scope.entity.specIds=JSON.parse(response.specIds);
                            //扩展属性
                            $scope.entity.customAttributeItems=JSON.parse(response.customAttributeItems);
            			}
            		);
            	}
    5.删除功能的实现
      添加一个删除按钮,传入事件ng-click="dele()"和复选框的点击事件   ng-click="updateSelection($event,pojo.id)"
    6.显示页面的而优化,
        实现方式:自定义一个方法,解析json格式的数据,根据key获取值
        注意点:json对象根据属性名,获取值有两种方式,必须掌握**********************************
        //解析json数据,然后根据属性名获取属性值做字符串的拼接操作
            //jsonString 需要解析的字符串,  key :  json对象的属性名
            $scope.jsonStringParse=function (jsonString,key) {
                //定义一个变量为解析的字符串值
                var value="";
                var jsonArry = JSON.parse(jsonString);
                for(var i= 0;i<jsonArry.length;i++){
                    //注意json对象根据属性名,获取值有两种方式,
                    //1.如果属性名是确定值,直接属性.属性名
                    //2.如果属性名不确定是一个变量,需要 对象[属性名]
                    if(i>0){
                        value+=","+jsonArry[i][key];
                    }else{
                        value+=jsonArry[i][key];
                    }
                }
                return value;
    7.分类管理的实现
          分析:三个层级关系   作用:方便商品查询 方便商品管理
          实现方式,通过自关联的方式实现   非常重要  *******
          关联关系:   三级分类与模板是   一对一的关系
        后台代码实现:通过findByParentId(Long parentId)  返回list数据
        前台:通过自己定义一个方法实现
        controller层
        // 根据父id找子类
            $scope.findByParentId=function(parentId){
                itemCatService.findByParentId(parentId).success(
                    function(response){
                        $scope.entity= response;
                    }
                );
            }
        service层
        //根据父id查找自分类
            this.findByParentId=function(parentId){
                return $http.get('../itemCat/findByParentId.do?parentId='+parentId);
            }
        查询下一级按钮,我们传入当前的父id值